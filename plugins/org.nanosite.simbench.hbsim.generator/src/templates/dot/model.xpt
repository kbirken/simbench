«IMPORT hbsim»
«EXTENSION templates::helpers»
«EXTENSION templates::dot::dot»

«DEFINE Transform(String targetPath, Boolean withScenario, Boolean compact) FOR Model»

«REM»
	generate dot-file containing all states/preconditions, with CPU clusters
«ENDREM»
«EXPAND templates::dot::all_dot::dotFile(targetPath, null, withScenario, compact, true) FOR this»

«REM»
	generate dot-file containing all states/preconditions, without CPU clusters
«ENDREM»
«EXPAND templates::dot::all_dot::dotFile(targetPath, null, withScenario, compact, false) FOR this»

«REM»
	generate set of dot-files containing all states/preconditions,
	restricted to one cpu. do this for all cpus.
«ENDREM»
«FOREACH getAllCPUs() AS cpu»
	«EXPAND templates::dot::all_dot::dotFile(targetPath, cpu, withScenario, compact, true) FOR this»
«ENDFOREACH»

«REM»
	generate set of dot-files for browsing complex models
«EXPAND browsableModel(targetPath, withScenario) FOR this»
«ENDREM»


«REM»
	generate dot-file containing only CPU mappings and FBs (including their dependencies)
«ENDREM»
«EXPAND templates::dot::fb_dot::dotFile(targetPath, withScenario) FOR this»

«REM»
	generate batch file used to post-process all dot files generated before
«ENDREM»
«FILE "draw.bat"»
@echo off
IF "x%1"=="x" GOTO NoParam
set dot=%1
GOTO :HaveDot
:NoParam
set dot="C:\Program Files\Graphviz2.26.3\bin\dot.exe"
:HaveDot

rem generate detail-CPU graphs
«FOREACH getAllCPUs() AS cpu»
echo generate files for cpu '«cpu.name»'
%dot% -Tgif -o «cpu.fileDetailed(".gif")» «cpu.fileDetailedDot()»
%dot% -Tcmapx -o «cpu.fileDetailed(".map")» «cpu.fileDetailedDot()»
echo.
«ENDFOREACH»
«ENDFILE»

«ENDDEFINE»




«DEFINE browsableModel(String targetPath, Boolean withScenario) FOR Model»
«FOREACH getAllFunctionBlocks() AS fb»
«EXPAND templates::dot::all_dot::browserDotFile(targetPath + "/browsable", fb) FOR this»
«ENDFOREACH»

«FILE "browsable/0-prepare.bat"»
@echo off
IF "x%1"=="x" GOTO NoParam
set dot=%1
GOTO :HaveDot
:NoParam
set dot="C:\Program Files\Graphviz2.26.3\bin\dot.exe"
:HaveDot

rem generate detailed graphs
«FOREACH getAllFunctionBlocks() AS fb»
echo generate files for fb '«fb.name»'
%dot% -Tgif -o «fb.fileDetailed(".gif")» «fb.fileDetailedDot()»
%dot% -Tcmapx -o «fb.fileDetailed(".map")» «fb.fileDetailedDot()»
makeHTML.pl «fb.fileDetailed(".map")» «fb.fileDetailed(".html")»
echo.
«ENDFOREACH»
«ENDFILE»


«FOREACH getAllFunctionBlocks() AS fb»
«FILE "browsable/"+fb.fileDetailed(".html")»
<html>
<head>
<meta http-equiv="cache-control" content="no-cache">
<meta http-equiv="pragma" content="no-cache">
<title>SIMBENCH</title>
</head>
<body>
<p>Browsable simulation model generated by SIMBENCH.</p>
<A HREF="«fb.fileDetailed(".html")»"><IMG SRC="«fb.fileDetailed(".gif")»" usemap="#hbsim_graph" /></A>
@@@
</body>
</html>
«ENDFILE»
«ENDFOREACH»

«ENDDEFINE»
